/*
 * generated by Xtext
 */
package at.ac.tuwien.big.forms.entity.scoping;

import org.eclipse.emf.common.util.BasicEList;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;

import at.ac.tuwien.big.forms.Attribute;
import at.ac.tuwien.big.forms.Entity;
import at.ac.tuwien.big.forms.Feature;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation.html#scoping
 * on how and when to use it 
 *
 */
public class EntityScopeProvider extends org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider {
	IScope scope_Entity_id(Entity ctx_Entity, EReference ref) {
		EList<Attribute> allAttributes = new BasicEList<Attribute>();
		
		// collect all attributes from entity and super types
		Entity superType = ctx_Entity;
		while (superType != null) {
			EList<Feature> features = superType.getFeatures();
			// grab attributes out of features
			for (Feature feature : features) {
				if (feature instanceof Attribute)
					allAttributes.add((Attribute) feature);
			}
			// next super type
			superType = superType.getSuperType();
		}
		
		return Scopes.scopeFor(allAttributes);
	}
}
